@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav navbar-nav navbar-right">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (UserManager.IsInRoleAsync(UserManager.FindByNameAsync(User.Identity.Name).Result, "Admin").Result)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-page="/Overview">Admin-Bereich</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Konto verwalten">Hallo @UserEntity.GetUser(UserManager, User).Name.ToString()!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Abmelden</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Anmelden</a>
        </li>
    }
</ul>