@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav navbar-nav navbar-right">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User != null)
        {
            if (User.IsInRole("Admin"))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Admin" asp-page="/Index">Admin-Bereich</a>
                </li>
            }
            if (User.IsInRole("Admin") || User.IsInRole("Employee"))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Kitchen" asp-page="/Index">K&uumlchen-Bereich</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Counter" asp-page="/Index">Theken-Bereich</a>
                </li>
            }
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Konto verwalten">Hallo @UserEntity.GetUser(UserManager, User).Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Abmelden</button>
            </form>
        </li>
    }
    else
    {
        <ul class="nav navbar-nav navbar-right">
            <li><a asp-area="Identity" asp-page="/Account/Register">Registrieren</a></li>
            <li><a asp-area="Identity" asp-page="/Account/Login">Anmelden</a></li>
        </ul>
    }
</ul>